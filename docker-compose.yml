
services:
  postgres:
    image: postgres:14
    env_file:
      - ./env/postgres.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - ./env/rabbitmq.env
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./env/api.env
    ports:
      - "3000:3000"

  parser_worker:
    build:
      context: ./workers/parser
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./env/parser.env

volumes:
  pgdata:
  rabbitmqdata:
